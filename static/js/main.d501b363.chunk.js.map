{"version":3,"sources":["components/addTodo/index.js","components/todoList/index.js","constants/index.js","actions/index.js","App.js","reducers/index.js","store.js","index.js"],"names":["AddTodo","_ref","input","submitTodo","undeleteTodo","react_default","a","createElement","onSubmit","event","preventDefault","value","className","ref","element","type","onClick","TodoList","todos","deleteTodo","todoItems","map","todo","key","id","text","types","SUBMIT_TODO","DELETE_TODO","UNDELETE_TODO","todoId","actions","connect","state","todoListApp","dispatch","addTodo","todoList","initialState","deleted","reducer","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","concat","filter","reducers","combineReducers","createStore","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d501b363.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddTodo = ({ submitTodo, undeleteTodo }) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          submitTodo(input.value);\n          input.value = '';\n        }}\n      >\n\n        <input\n          className=\"todo-input\"\n          ref={(element) => {\n            input = element;\n          }}\n        />\n\n        <button type=\"submit\" className=\"todo-submit\">\n          Add todo\n        </button>\n\n        <button\n          type=\"submit\"\n          className=\"todo-undelete\"\n          onClick={() => undeleteTodo()}\n        >\n          Undelete\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddTodo.propTypes = {\n  submitTodo: PropTypes.func.isRequired,\n  undeleteTodo: PropTypes.func.isRequired,\n};\n\n\nexport default AddTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, deleteTodo }) => {\n  const todoItems = todos.map(todo => (\n    <li key={todo.id}>\n\n      <button\n        type=\"button\"\n        className=\"todo-delete\"\n        onClick={() => deleteTodo(todo.id)}\n      >\n        Delete\n      </button>\n\n      <span className=\"todo-text\">\n        {todo.text}\n      </span>\n    </li>\n  ));\n\n  return (\n    <ul>\n      {todoItems}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    },\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","const types = {\n  SUBMIT_TODO: 'SUBMIT_TODO',\n  DELETE_TODO: 'DELETE_TODO',\n  UNDELETE_TODO: 'UNDELETE_TODO',\n};\n\nexport default types;\n","import types from '../constants';\n\nlet todoId = 0;\n\nconst nextId = () => {\n  todoId += 1;\n  return todoId;\n};\n\nconst actions = {\n  submitTodo(text) {\n    return {\n      type: types.SUBMIT_TODO,\n      id: nextId(),\n      text,\n    };\n  },\n\n  deleteTodo(id) {\n    return {\n      type: types.DELETE_TODO,\n      id,\n    };\n  },\n\n  undeleteTodo() {\n    return {\n      type: types.UNDELETE_TODO,\n    };\n  },\n};\n\nexport default actions;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddTodo from './components/addTodo';\nimport TodoList from './components/todoList';\nimport actions from './actions';\n\nexport const App = ({\n  submitTodo,\n  todos,\n  deleteTodo,\n  undeleteTodo,\n}) => (\n  <div>\n    <h1>Todo List</h1>\n    <AddTodo submitTodo={submitTodo} undeleteTodo={undeleteTodo} />\n    <TodoList todos={todos} deleteTodo={deleteTodo} />\n  </div>\n);\n\nApp.propTypes = {\n  submitTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n    },\n  )).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  undeleteTodo: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => state.todoListApp;\n\nconst mapDispatchToProps = dispatch => ({\n  submitTodo: (text) => {\n    if (text) {\n      dispatch(actions.submitTodo(text));\n    }\n  },\n\n  deleteTodo: (id) => {\n    dispatch(actions.deleteTodo(id));\n  },\n\n  undeleteTodo: () => {\n    dispatch(actions.undeleteTodo());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import types from '../constants';\n\nexport const initialState = {\n  todos: [],\n  deleted: {},\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SUBMIT_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: action.id,\n            text: action.text,\n          },\n        ],\n      };\n\n    case types.DELETE_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.filter(todo => (\n            todo.id !== action.id\n          )),\n        ],\n        deleted: state.todos.filter(todo => todo.id === action.id)[0],\n      };\n\n    case types.UNDELETE_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          state.deleted,\n        ],\n        deleted: {},\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport todoListApp from './reducers';\n\nconst reducers = combineReducers({\n  todoListApp,\n});\n\nexport default createStore(reducers);\n","/* global document */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// registerServiceWorker();\n"],"sourceRoot":""}